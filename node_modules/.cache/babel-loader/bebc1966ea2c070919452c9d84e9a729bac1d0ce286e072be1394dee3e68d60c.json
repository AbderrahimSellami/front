{"ast":null,"code":"import { BFormDatepicker, BFormTimepicker, BFormSelect } from 'bootstrap-vue';\nexport default {\n  components: {\n    BFormDatepicker,\n    BFormTimepicker,\n    BFormSelect\n  },\n  data() {\n    return {\n      selected: null,\n      local: [{\n        value: 's1',\n        text: 'salle 1'\n      }, {\n        value: 's2',\n        text: 'salle 2'\n      }, {\n        value: 's3',\n        text: 'salle 3'\n      }, {\n        value: 's4',\n        text: 'salle 4'\n      }, {\n        value: 'a14',\n        text: 'Amphi 14'\n      }, {\n        value: 'a26',\n        text: 'Amphi 26'\n      }, {\n        value: 'a13',\n        text: 'Amphi 13'\n      }, {\n        value: 'a16',\n        text: 'Amphi 16'\n      }],\n      dateDebut: null,\n      dateFin: null,\n      heureDebut: null,\n      heureFin: null,\n      duree: null\n    };\n  },\n  methods: {\n    handleSubmit() {\n      // Créer un objet avec les données du formulaire\n      const formData = {\n        Date_debut: this.dateDebut,\n        Date_fin: this.dateFin,\n        heure_debut: this.heureDebut,\n        heure_fin: this.heureFin,\n        duree: this.duree,\n        salle: this.selected\n      };\n      // Envoyer les données au backend\n      fetch('http://127.0.0.1:8000/planning/plateforme/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Erreur lors de l\\'enregistrement des données');\n        }\n        return response.json();\n      }).then(data => {\n        // Gérer la réponse du backend si nécessaire\n        console.log('Données enregistrées avec succès:', data);\n      }).catch(error => {\n        console.error('Erreur lors de la soumission du formulaire:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["BFormDatepicker","BFormTimepicker","BFormSelect","components","data","selected","local","value","text","dateDebut","dateFin","heureDebut","heureFin","duree","methods","handleSubmit","formData","Date_debut","Date_fin","heure_debut","heure_fin","salle","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","console","log","catch","error"],"sources":["src/views/LancePlatforme.vue"],"sourcesContent":["<template>\n    <b-form @submit.prevent=\"handleSubmit\">\n      <!-- Navbar -->\n      <b-navbar toggleable=\"lg\" type=\"dark\" variant=\"secondary\">\n        <b-navbar-brand class=\"mx-auto\" href=\"/lance\"> Platforme Initiale</b-navbar-brand>\n      </b-navbar>\n      <br><br>\n      <!-- Formulaire de saisie -->\n      <b-row>\n        <b-col>\n          <b-form-group class=\"mb-3\" label=\"Les Soutenances commence le :\" style=\"font-weight: bold;\">\n            <b-form-datepicker v-model=\"dateDebut\" class=\"mr-2\" placeholder=\"Choisir une date\"></b-form-datepicker>\n            <b-form-timepicker v-model=\"heureDebut\" placeholder=\"Choisir une heure\"></b-form-timepicker>\n          </b-form-group>\n        </b-col>\n        <b-col>\n          <b-form-group class=\"mb-3\" label=\"jusqu'au :\" style=\"font-weight: bold;\">\n            <b-form-datepicker v-model=\"dateFin\" class=\"mr-2\" placeholder=\"Choisir une date\"></b-form-datepicker>\n            <b-form-timepicker v-model=\"heureFin\" placeholder=\"Choisir une heure\"></b-form-timepicker>\n          </b-form-group>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <b-form-group class=\"mb-3\" label=\"La durée de chaque Soutenance :\" style=\"font-weight: bold;\">\n            <b-form-timepicker v-model=\"duree\" placeholder=\"Choisir une heure\"></b-form-timepicker>\n          </b-form-group>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <b-form-group class=\"mb-3\" label=\"Local :\" style=\"font-weight: bold;\">\n            <b-form-select v-model=\"selected\" :options=\"local\" :select-size=\"4\"></b-form-select>\n          </b-form-group>\n        </b-col>\n      </b-row>\n      <!-- Bouton de validation -->\n      <b-button type=\"submit\" variant=\"primary\">Valider</b-button>\n      <!-- Lien de retour -->\n      <nav>\n        <router-link to=\"/administrateur\" class=\"custom-link\">Retour</router-link>\n      </nav>\n      <router-view />\n    </b-form>\n  </template>\n  \n  <script>\n  import { BFormDatepicker, BFormTimepicker, BFormSelect } from 'bootstrap-vue'\n  \n  export default {\n    components: {\n      BFormDatepicker,\n      BFormTimepicker,\n      BFormSelect,\n    },\n    data() {\n      return {\n        selected: null,\n        local: [\n          { value: 's1', text: 'salle 1' },\n          { value: 's2', text: 'salle 2' },\n          { value: 's3', text: 'salle 3' },\n          { value: 's4', text: 'salle 4' },\n          { value: 'a14', text: 'Amphi 14' },\n          { value: 'a26', text: 'Amphi 26' },\n          { value: 'a13', text: 'Amphi 13' },\n          { value: 'a16', text: 'Amphi 16' },\n        ],\n        dateDebut: null,\n        dateFin: null,\n        heureDebut: null,\n        heureFin: null,\n        duree: null,\n      }\n    },\n    methods: {\n      handleSubmit() {\n        // Créer un objet avec les données du formulaire\n        const formData = {\n          Date_debut: this.dateDebut,\n          Date_fin: this.dateFin,\n          heure_debut: this.heureDebut,\n          heure_fin: this.heureFin,\n          duree: this.duree,\n          salle: this.selected,\n        }\n        // Envoyer les données au backend\n        fetch('http://127.0.0.1:8000/planning/plateforme/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(formData),\n        })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Erreur lors de l\\'enregistrement des données');\n          }\n          return response.json();\n        })\n        .then(data => {\n          // Gérer la réponse du backend si nécessaire\n          console.log('Données enregistrées avec succès:', data);\n        })\n        .catch(error => {\n          console.error('Erreur lors de la soumission du formulaire:', error);\n        });\n      },\n    },\n  }\n  </script>\n  \n  <style>\n  /* Styles CSS */\n  </style>\n  "],"mappings":"AA+CA,SAAAA,eAAA,EAAAC,eAAA,EAAAC,WAAA;AAEA;EACAC,UAAA;IACAH,eAAA;IACAC,eAAA;IACAC;EACA;EACAE,KAAA;IACA;MACAC,QAAA;MACAC,KAAA,GACA;QAAAC,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,EACA;MACAC,SAAA;MACAC,OAAA;MACAC,UAAA;MACAC,QAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,aAAA;MACA;MACA,MAAAC,QAAA;QACAC,UAAA,OAAAR,SAAA;QACAS,QAAA,OAAAR,OAAA;QACAS,WAAA,OAAAR,UAAA;QACAS,SAAA,OAAAR,QAAA;QACAC,KAAA,OAAAA,KAAA;QACAQ,KAAA,OAAAhB;MACA;MACA;MACAiB,KAAA;QACAC,MAAA;QACAC,OAAA;UACA;QACA;QACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAX,QAAA;MACA,GACAY,IAAA,CAAAC,QAAA;QACA,KAAAA,QAAA,CAAAC,EAAA;UACA,UAAAC,KAAA;QACA;QACA,OAAAF,QAAA,CAAAG,IAAA;MACA,GACAJ,IAAA,CAAAxB,IAAA;QACA;QACA6B,OAAA,CAAAC,GAAA,sCAAA9B,IAAA;MACA,GACA+B,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,gDAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}