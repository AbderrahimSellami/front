{"ast":null,"code":"export default {\n  data() {\n    return {\n      newNonDispo: {\n        date: null,\n        heure: null\n      }\n    };\n  },\n  methods: {\n    addNonDispo() {\n      // Vérifier si la date et l'heure sont sélectionnées\n      if (this.newNonDispo.date && this.newNonDispo.heure) {\n        // Envoi d'une requête HTTP POST pour ajouter les données\n        fetch('http://127.0.0.1:8000/enseignant/nondispo/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.newNonDispo)\n        }).then(response => {\n          if (!response.ok) {\n            throw new Error('La requête a échoué.');\n          }\n          return response.json();\n        }).then(data => {\n          // Réinitialiser les champs de saisie\n          this.newNonDispo.date = null;\n          this.newNonDispo.heure = null;\n          // Actualiser les données après ajout\n          this.$emit('refreshData');\n        }).catch(error => {\n          console.error('Une erreur s\\'est produite lors de l\\'ajout de la non-disponibilité:', error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","newNonDispo","date","heure","methods","addNonDispo","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","$emit","catch","error","console"],"sources":["src/views/nondisponibilite.vue"],"sourcesContent":["<template>\n    <div>\n      <b-form-group label=\"Ajouter la Non Disponibilité\">\n        <b-row>\n          <b-col>\n            <b-form-datepicker v-model=\"newNonDispo.date\" required></b-form-datepicker>\n          </b-col>\n          <b-col>\n            <b-form-input v-model=\"newNonDispo.heure\" type=\"text\" placeholder=\"Heure\" required></b-form-input>\n          </b-col>\n          <b-col>\n            <b-button variant=\"primary\" @click=\"addNonDispo\">Ajouter</b-button>\n          </b-col>\n        </b-row>\n      </b-form-group>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        newNonDispo: {\n          date: null,\n          heure: null\n        }\n      };\n    },\n    methods: {\n      addNonDispo() {\n        // Vérifier si la date et l'heure sont sélectionnées\n        if (this.newNonDispo.date && this.newNonDispo.heure) {\n          // Envoi d'une requête HTTP POST pour ajouter les données\n          fetch('http://127.0.0.1:8000/enseignant/nondispo/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.newNonDispo)\n          })\n          .then(response => {\n            if (!response.ok) {\n              throw new Error('La requête a échoué.');\n            }\n            return response.json();\n          })\n          .then(data => {\n            // Réinitialiser les champs de saisie\n            this.newNonDispo.date = null;\n            this.newNonDispo.heure = null;\n            // Actualiser les données après ajout\n            this.$emit('refreshData');\n          })\n          .catch(error => {\n            console.error('Une erreur s\\'est produite lors de l\\'ajout de la non-disponibilité:', error);\n          });\n        }\n      }\n    }\n  };\n  </script>\n  "],"mappings":"AAmBA;EACAA,KAAA;IACA;MACAC,WAAA;QACAC,IAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA;MACA,SAAAJ,WAAA,CAAAC,IAAA,SAAAD,WAAA,CAAAE,KAAA;QACA;QACAG,KAAA;UACAC,MAAA;UACAC,OAAA;YACA;UACA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,MAAAV,WAAA;QACA,GACAW,IAAA,CAAAC,QAAA;UACA,KAAAA,QAAA,CAAAC,EAAA;YACA,UAAAC,KAAA;UACA;UACA,OAAAF,QAAA,CAAAG,IAAA;QACA,GACAJ,IAAA,CAAAZ,IAAA;UACA;UACA,KAAAC,WAAA,CAAAC,IAAA;UACA,KAAAD,WAAA,CAAAE,KAAA;UACA;UACA,KAAAc,KAAA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,yEAAAA,KAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}