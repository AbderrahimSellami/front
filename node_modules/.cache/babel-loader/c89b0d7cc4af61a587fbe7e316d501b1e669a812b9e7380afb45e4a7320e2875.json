{"ast":null,"code":"export default {\n  name: 'EnseignantComponent',\n  data() {\n    return {\n      selected: null,\n      list: [{\n        value: \"enseignant\",\n        text: \"Par Enseignant\"\n      }, {\n        value: \"thème\",\n        text: \"Par Thème\"\n      }, {\n        value: \"spécialité\",\n        text: \"Par Spécialité\"\n      }],\n      thèmes: [],\n      // Initialisez la liste des thèmes à vide\n      fields: [\"Theme\", \"Specialite\", \"actions\"],\n      modal: false\n    };\n  },\n  mounted() {\n    this.fetchThemes(); // Appeler la fonction pour récupérer les thèmes lors du montage du composant\n  },\n  methods: {\n    fetchThemes() {\n      fetch('http://127.0.0.1:8000/enseignant/liste-themes/') // Faites une requête HTTP GET à votre point de terminaison Django\n      .then(response => response.json()).then(data => {\n        this.thèmes = data.themes; // Mettez à jour la liste des thèmes avec les données reçues du serveur\n      }).catch(error => {\n        console.error('Une erreur s\\'est produite lors de la récupération des thèmes:', error);\n      });\n    },\n    deleteRow(theme) {\n      this.thèmes = this.thèmes.filter(t => t !== theme);\n    },\n    proposer() {\n      this.modal = true;\n    },\n    theme(theme) {\n      // Logique pour modifier un thème\n    },\n    resetModal() {\n      // Logique pour réinitialiser le modal\n    },\n    handleOk() {\n      // Logique pour le bouton OK du modal\n    }\n  }\n};","map":{"version":3,"names":["name","data","selected","list","value","text","thèmes","fields","modal","mounted","fetchThemes","methods","fetch","then","response","json","themes","catch","error","console","deleteRow","theme","filter","t","proposer","resetModal","handleOk"],"sources":["src/views/Enseignant.vue"],"sourcesContent":["<template>\n  <b-form>\n    <b-container>\n      <b-navbar toggleable=\"sm\" variant=\"secondary\">\n        <b-navbar-brand class=\"mb-2\" href=\"/planning\">Planning</b-navbar-brand>\n        <b-navbar-brand class=\"mb-2\" href=\"/nondispo\">Saisir la non Disponibilité</b-navbar-brand>\n        <b-navbar-brand class=\"mb-2\" href=\"/listebinomes\">Liste des binômes</b-navbar-brand>\n        <b-navbar-nav type=\"dark\" class=\"ml-auto\">\n          <b-nav-form class=\"d-flex align-items-center\" text=\"Lang\">\n            <b-form-select v-model=\"selected\" :options=\"list\" value-field=\"value\" text-field=\"text\" class=\"mr-sm-2\" style=\"border-color: black\"></b-form-select>\n          </b-nav-form>\n          <b-nav-form class=\"d-flex align-items-center\" text=\"Lang\">\n            <b-button size=\"sm\" class=\"my-2 my-sm-0\" type=\"submit\" variant=\"dark\">Rechercher</b-button>\n          </b-nav-form>\n        </b-navbar-nav>\n      </b-navbar>\n      <br><br>\n      <div>\n        <b-form-group label=\"Liste des thèmes proposés :\" style=\"font-weight: bold\" label-cols-lg=\"13\" label-size=\"lg\">\n        </b-form-group>\n      </div>\n      <br><br><br>\n      <div>\n        <b-table :items=\"thèmes\" :fields=\"fields\">\n          <template #cell(actions)=\"data\">\n            <b-button variant=\"secondary\" size=\"sm\" class=\"mr-1\" @click=\"theme(data.item)\">Modifier</b-button>\n            <b-button @click=\"deleteRow(data.item)\" variant=\"danger\" size=\"sm\" class=\"mr-2\">Supprimer</b-button>\n          </template>\n        </b-table>\n      </div>\n      <b-button variant=\"primary\" size=\"lg\" class=\"mr-1\" @click=\"proposer()\">Proposer un Thème</b-button>\n      <b-modal id=\"modal-1\" v-model=\"modal\" ref=\"modal\" size=\"lg\" title=\"Proposer un Thème\" @show=\"resetModal\" @hidden=\"resetModal\" @ok=\"handleOk\" header-bg-variant=\"primary\" header-text-variant=\"light\"></b-modal>\n    </b-container>\n  </b-form>\n</template>\n\n<script>\nexport default {\n  name: 'EnseignantComponent',\n  data() {\n    return {\n      selected: null,\n      list: [\n        { value: \"enseignant\", text: \"Par Enseignant\" },\n        { value: \"thème\", text: \"Par Thème\" },\n        { value: \"spécialité\", text: \"Par Spécialité\" },\n      ],\n      thèmes: [], // Initialisez la liste des thèmes à vide\n      fields: [\"Theme\", \"Specialite\", \"actions\"],\n      modal: false\n    }\n  },\n  mounted() {\n    this.fetchThemes(); // Appeler la fonction pour récupérer les thèmes lors du montage du composant\n  },\n  methods: {\n    fetchThemes() {\n      fetch('http://127.0.0.1:8000/enseignant/liste-themes/') // Faites une requête HTTP GET à votre point de terminaison Django\n        .then(response => response.json())\n        .then(data => {\n          this.thèmes = data.themes; // Mettez à jour la liste des thèmes avec les données reçues du serveur\n        })\n        .catch(error => {\n          console.error('Une erreur s\\'est produite lors de la récupération des thèmes:', error);\n        });\n    },\n    deleteRow(theme) {\n      this.thèmes = this.thèmes.filter(t => t !== theme);\n    },\n    proposer() {\n      this.modal = true;\n    },\n    theme(theme) {\n      // Logique pour modifier un thème\n    },\n    resetModal() {\n      // Logique pour réinitialiser le modal\n    },\n    handleOk() {\n      // Logique pour le bouton OK du modal\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":"AAqCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,IAAA,GACA;QAAAC,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,EACA;MACAC,MAAA;MAAA;MACAC,MAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAD,YAAA;MACAE,KAAA;MAAA,CACAC,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAZ,IAAA;QACA,KAAAK,MAAA,GAAAL,IAAA,CAAAe,MAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,mEAAAA,KAAA;MACA;IACA;IACAE,UAAAC,KAAA;MACA,KAAAf,MAAA,QAAAA,MAAA,CAAAgB,MAAA,CAAAC,CAAA,IAAAA,CAAA,KAAAF,KAAA;IACA;IACAG,SAAA;MACA,KAAAhB,KAAA;IACA;IACAa,WAAA;MACA;IAAA,CACA;IACAI,WAAA;MACA;IAAA,CACA;IACAC,SAAA;MACA;IAAA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}