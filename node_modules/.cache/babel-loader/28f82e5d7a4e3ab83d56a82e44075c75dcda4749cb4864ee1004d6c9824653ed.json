{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { BTable, BButton, BModal, BFormGroup, BFormInput, BFormSelect } from 'bootstrap-vue';\nexport default {\n  name: 'comptesComponent',\n  components: {\n    BTable,\n    BButton,\n    BModal,\n    BFormGroup,\n    BFormInput,\n    BFormSelect\n  },\n  data() {\n    return {\n      fields: [{\n        key: 'nom',\n        label: 'Nom'\n      }, {\n        key: 'prenom',\n        label: 'Prenom'\n      }, {\n        key: 'email',\n        label: 'Email'\n      }, {\n        key: 'actions',\n        label: 'Actions'\n      }],\n      items: [],\n      modalShow: false,\n      form: {\n        nom: '',\n        prenom: '',\n        grade: '',\n        domaine: '',\n        login: '',\n        password: ''\n      },\n      selected: null,\n      local: [{\n        value: 'Admin',\n        text: 'Admin'\n      }, {\n        value: 'Enseignant',\n        text: 'Enseignant'\n      }, {\n        value: 'Etudiant',\n        text: 'Etudiant'\n      }]\n    };\n  },\n  mounted() {\n    this.fetchComptes();\n  },\n  methods: {\n    async fetchComptes() {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/utilisateurs/comptes/');\n        if (!response.ok) {\n          throw new Error('Erreur lors de la récupération des comptes');\n        }\n        const data = await response.json();\n        this.items = data.data;\n        console.log('Fetched comptes:', this.items);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async deleteRow(item) {\n      console.log(`Attempting to delete user with ID: ${item.id}`);\n      if (item.id !== undefined) {\n        try {\n          const response = await fetch(`http://127.0.0.1:8000/utilisateurs/delete_user/${item.id}/`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(`Erreur lors de la suppression de l'utilisateur: ${errorText}`);\n          }\n          console.log(`User with ID: ${item.id} deleted successfully`);\n          this.items = this.items.filter(i => i.id !== item.id);\n        } catch (error) {\n          console.error('Erreur lors de la suppression de l\\'utilisateur:', error);\n        }\n      } else {\n        console.error('ID utilisateur est undefined');\n      }\n    },\n    showModal() {\n      this.modalShow = true;\n    },\n    resetModal() {\n      this.form = {\n        nom: '',\n        prenom: '',\n        grade: '',\n        domaine: '',\n        login: '',\n        password: ''\n      };\n    },\n    handleSubmit() {\n      this.ajouter();\n    },\n    async ajouter() {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/utilisateurs/ajout_user/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.form)\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Erreur lors de l'ajout de l'utilisateur: ${errorText}`);\n        }\n        const newUser = await response.json();\n        console.log('User added successfully:', newUser);\n        this.items.push(newUser);\n        this.retour();\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout de l\\'utilisateur:', error);\n      }\n    },\n    retour() {\n      this.modalShow = false;\n    }\n  }\n};","map":{"version":3,"names":["BTable","BButton","BModal","BFormGroup","BFormInput","BFormSelect","name","components","data","fields","key","label","items","modalShow","form","nom","prenom","grade","domaine","login","password","selected","local","value","text","mounted","fetchComptes","methods","response","fetch","ok","Error","json","console","log","error","deleteRow","item","id","undefined","method","headers","errorText","filter","i","showModal","resetModal","handleSubmit","ajouter","body","JSON","stringify","newUser","push","retour"],"sources":["src/views/gestioncomptes.vue"],"sourcesContent":["<template>\n  <b-form @submit.prevent=\"handleSubmit\">\n    <!-- Navbar and existing table -->\n    <b-navbar toggleable=\"lg\" type=\"dark\" variant=\"secondary\">\n      <b-navbar-brand class=\"mx-auto\" href=\"/gestioncomptes\">Liste des utilisateurs</b-navbar-brand>\n    </b-navbar>\n    <br><br>\n    <div>\n      <b-table :items=\"items\" :fields=\"fields\">\n        <template #cell(actions)=\"data\">\n          <b-button @click=\"deleteRow(data.item)\" variant=\"danger\" size=\"sm\" class=\"mr-2\" ref=\"btnShow1\">\n            Supprimer\n          </b-button>\n        </template>\n      </b-table>\n    </div>\n    <b-button variant=\"primary\" size=\"lg\" class=\"mr-1\" @click=\"showModal()\">Ajouter un Utilisateur</b-button>\n\n    <nav>\n      <router-link to=\"/administrateur\" class=\"custom-link\">Retour</router-link>\n    </nav>\n    <router-view />\n\n    <b-modal id=\"modal-1\" v-model=\"modalShow\" ref=\"modal\" size=\"lg\" title=\"Formulaire D'ajout d'un Utilisateur\"\n      @show=\"resetModal\" @hidden=\"resetModal\" @ok=\"handleOk\" header-bg-variant=\"primary\" header-text-variant=\"light\">\n      \n      <b-form-group label=\"Nom\" label-for=\"nom\">\n        <b-form-input id=\"nom\" v-model=\"form.nom\" required></b-form-input>\n      </b-form-group>\n      <b-form-group label=\"Prenom\" label-for=\"prenom\">\n        <b-form-input id=\"prenom\" v-model=\"form.prenom\" required></b-form-input>\n      </b-form-group>\n      <b-form-group label=\"Login\" label-for=\"login\">\n        <b-form-input id=\"login\" v-model=\"form.login\" required></b-form-input>\n      </b-form-group>\n      <b-form-group label=\"password\" label-for=\"password\">\n        <b-form-input id=\"password\" type=\"password\" v-model=\"form.password\" required></b-form-input>\n      </b-form-group>\n      <b-form-group label=\"Grade\" label-for=\"grade\">\n        <b-form-select id=\"grade\" v-model=\"form.grade\" :options=\"local\" required></b-form-select>\n      </b-form-group>\n      \n      <b-button @click=\"ajouter()\" type=\"submit\" variant=\"primary\">Ajouter</b-button>\n    </b-modal>\n  </b-form>\n</template>\n\n<script>\nimport { BTable, BButton, BModal, BFormGroup, BFormInput, BFormSelect } from 'bootstrap-vue';\n\nexport default {\n  name: 'comptesComponent',\n\n  components: {\n    BTable,\n    BButton,\n    BModal,\n    BFormGroup,\n    BFormInput,\n    BFormSelect,\n  },\n  \n  data() {\n    return {\n      fields: [\n        { key: 'nom', label: 'Nom' },\n        { key: 'prenom', label: 'Prenom' },\n        { key: 'email', label: 'Email' },\n        { key: 'actions', label: 'Actions' }\n      ],\n      items: [],\n      modalShow: false,\n      form: {\n        nom: '',\n        prenom: '',\n        grade: '',\n        domaine: '',\n        login: '',\n        password: '',\n      },\n      selected: null,\n      local: [\n        { value: 'Admin', text: 'Admin' },\n        { value: 'Enseignant', text: 'Enseignant' },\n        { value: 'Etudiant', text: 'Etudiant' },\n      ],\n    };\n  },\n  \n  mounted() {\n    this.fetchComptes();\n  },\n\n  methods: {\n    async fetchComptes() {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/utilisateurs/comptes/');\n        if (!response.ok) {\n          throw new Error('Erreur lors de la récupération des comptes');\n        }\n        const data = await response.json();\n        this.items = data.data;\n        console.log('Fetched comptes:', this.items);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async deleteRow(item) {\n      console.log(`Attempting to delete user with ID: ${item.id}`);\n      if (item.id !== undefined) {\n        try {\n          const response = await fetch(`http://127.0.0.1:8000/utilisateurs/delete_user/${item.id}/`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          });\n          if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(`Erreur lors de la suppression de l'utilisateur: ${errorText}`);\n          }\n          console.log(`User with ID: ${item.id} deleted successfully`);\n          this.items = this.items.filter(i => i.id !== item.id);\n        } catch (error) {\n          console.error('Erreur lors de la suppression de l\\'utilisateur:', error);\n        }\n      } else {\n        console.error('ID utilisateur est undefined');\n      }\n    },\n\n    showModal() {\n      this.modalShow = true;\n    },\n\n    resetModal() {\n      this.form = {\n        nom: '',\n        prenom: '',\n        grade: '',\n        domaine: '',\n        login: '',\n        password: '',\n      };\n    },\n\n    handleSubmit() {\n      this.ajouter();\n    },\n\n    async ajouter() {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/utilisateurs/ajout_user/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(this.form),\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Erreur lors de l'ajout de l'utilisateur: ${errorText}`);\n        }\n        const newUser = await response.json();\n        console.log('User added successfully:', newUser);\n        this.items.push(newUser);\n        this.retour();\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout de l\\'utilisateur:', error);\n      }\n    },\n\n    retour() {\n      this.modalShow = false;\n    },\n  },\n};\n</script>\n\n<style>\n/* Styles CSS */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}