{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      userType: 'admin',\n      userTypeOptions: [{\n        value: 'admin',\n        text: 'Administrateur'\n      }, {\n        value: 'teacher',\n        text: 'Enseignant'\n      }, {\n        value: 'student',\n        text: 'Etudiant'\n      }]\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formData = {\n        email: this.email,\n        password: this.password,\n        userType: this.userType\n      };\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      };\n      const serverUrl = 'http://127.0.0.1:8000/authentification/form_submission/';\n      try {\n        const response = await fetch(serverUrl, requestOptions);\n        if (!response.ok) {\n          throw new Error('Erreur lors de la requête.');\n        }\n        const data = await response.json();\n        switch (formData.userType) {\n          case 'admin':\n            if (data.AuthAdmin === \"OK\") {\n              this.$router.push('/admin');\n            } else {\n              alert('Authentification administrateur échouée');\n            }\n            break;\n          case 'teacher':\n            if (data.AuthTeacher === \"OK\") {\n              this.$router.push('/enseignant');\n            } else {\n              alert('Authentification enseignant échouée');\n            }\n            break;\n          case 'student':\n            if (data.AuthStudent === \"OK\") {\n              this.$router.push('/etudiant');\n            } else {\n              alert('Authentification étudiant échouée');\n            }\n            break;\n        }\n      } catch (error) {\n        console.error('Erreur:', error);\n        alert('Une erreur est survenue lors de la connexion.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","email","password","userType","userTypeOptions","value","text","methods","submitForm","formData","requestOptions","method","headers","body","JSON","stringify","serverUrl","response","fetch","ok","Error","json","AuthAdmin","$router","push","alert","AuthTeacher","AuthStudent","error","console"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <b-form @submit.prevent=\"submitForm\">\n    <b-container>\n      <b-row class=\"pb-2\">\n        <b-col cols=\"4\" lg=\"4\">\n          <label for=\"email\" class=\"font-weight-bold\">Email :</label>\n        </b-col>\n        <b-col cols=\"7\" lg=\"4\">\n          <b-form-input id=\"email\" v-model=\"email\" type=\"email\" style=\"border-color: black;\"></b-form-input>\n        </b-col>\n      </b-row>\n\n      <b-row class=\"pb-2\">\n        <b-col cols=\"4\" lg=\"4\">\n          <label for=\"password\" class=\"font-weight-bold\">Mot de passe :</label>\n        </b-col>\n        <b-col cols=\"7\" lg=\"4\">\n          <b-form-input id=\"password\" v-model=\"password\" type=\"password\" style=\"border-color: black;\"></b-form-input>\n        </b-col>\n      </b-row>\n\n      <b-row class=\"pb-2\">\n        <b-col cols=\"4\" lg=\"4\">\n          <label for=\"userType\" class=\"font-weight-bold\">Type Utilisateur :</label>\n        </b-col>\n        <b-col cols=\"7\" lg=\"4\">\n          <b-form-select id=\"userType\" v-model=\"userType\" :options=\"userTypeOptions\" value-field=\"value\" text-field=\"text\" class=\"form-select\" style=\"border-color: black;\"></b-form-select>\n        </b-col>\n      </b-row>\n\n      <b-row class=\"pb-2\">\n        <b-col cols=\"11\">\n          <b-button type=\"submit\" variant=\"success\" class=\"pb-2\">Se Connecter</b-button>\n        </b-col>\n      </b-row>\n    </b-container>\n  </b-form>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      userType: 'admin',\n      userTypeOptions: [\n        { value: 'admin', text: 'Administrateur' },\n        { value: 'teacher', text: 'Enseignant' },\n        { value: 'student', text: 'Etudiant' },\n      ]\n    };\n  },\n  methods: {\n    async submitForm() {\n      const formData = {\n        email: this.email,\n        password: this.password,\n        userType: this.userType\n      };\n\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      };\n\n      const serverUrl = 'http://127.0.0.1:8000/authentification/form_submission/';\n\n      try {\n        const response = await fetch(serverUrl, requestOptions);\n        if (!response.ok) {\n          throw new Error('Erreur lors de la requête.');\n        }\n        const data = await response.json();\n\n        switch (formData.userType) {\n          case 'admin':\n            if (data.AuthAdmin === \"OK\") {\n              this.$router.push('/admin');\n            } else {\n              alert('Authentification administrateur échouée');\n            }\n            break;\n          case 'teacher':\n            if (data.AuthTeacher === \"OK\") {\n              this.$router.push('/enseignant');\n            } else {\n              alert('Authentification enseignant échouée');\n            }\n            break;\n          case 'student':\n            if (data.AuthStudent === \"OK\") {\n              this.$router.push('/etudiant');\n            } else {\n              alert('Authentification étudiant échouée');\n            }\n            break;\n        }\n      } catch (error) {\n        console.error('Erreur:', error);\n        alert('Une erreur est survenue lors de la connexion.');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n  /* Ajoutez vos styles CSS ici */\n  .form-select {\n    border-color: black;\n  }\n</style>\n"],"mappings":";AAwCA;EACAA,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,QAAA;MACAC,eAAA,GACA;QAAAC,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA;IAEA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA,MAAAC,QAAA;QACAR,KAAA,OAAAA,KAAA;QACAC,QAAA,OAAAA,QAAA;QACAC,QAAA,OAAAA;MACA;MAEA,MAAAO,cAAA;QACAC,MAAA;QACAC,OAAA;UACA;QACA;QACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAN,QAAA;MACA;MAEA,MAAAO,SAAA;MAEA;QACA,MAAAC,QAAA,SAAAC,KAAA,CAAAF,SAAA,EAAAN,cAAA;QACA,KAAAO,QAAA,CAAAE,EAAA;UACA,UAAAC,KAAA;QACA;QACA,MAAApB,IAAA,SAAAiB,QAAA,CAAAI,IAAA;QAEA,QAAAZ,QAAA,CAAAN,QAAA;UACA;YACA,IAAAH,IAAA,CAAAsB,SAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;cACAC,KAAA;YACA;YACA;UACA;YACA,IAAAzB,IAAA,CAAA0B,WAAA;cACA,KAAAH,OAAA,CAAAC,IAAA;YACA;cACAC,KAAA;YACA;YACA;UACA;YACA,IAAAzB,IAAA,CAAA2B,WAAA;cACA,KAAAJ,OAAA,CAAAC,IAAA;YACA;cACAC,KAAA;YACA;YACA;QACA;MACA,SAAAG,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACAH,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}