{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { BButton, BForm } from 'bootstrap-vue';\nexport default {\n  name: 'EtudiantComponent',\n  components: {\n    BButton,\n    BForm\n  },\n  data() {\n    return {\n      thèmes: [],\n      fields: [\"Theme\", \"Enseignant\", \"Specialite\"],\n      // Modifiez \"Théme\" en \"Theme\"\n      selected: null,\n      list: [{\n        value: \"enseignant\",\n        text: \"Par Enseignant\"\n      }, {\n        value: \"thème\",\n        text: \"Par Thème\"\n      }, {\n        value: \"spécialité\",\n        text: \"Par Spécialité\"\n      }]\n    };\n  },\n  mounted() {\n    this.fetchThemes(); // Appeler la fonction pour récupérer les thèmes lors du montage du composant\n  },\n  methods: {\n    fetchThemes() {\n      fetch('http://127.0.0.1:8000/etudiant/liste_themes/').then(response => response.json()).then(data => {\n        this.thèmes = data.themes;\n      }).catch(error => {\n        console.error('Une erreur s\\'est produite lors de la récupération des thèmes:', error);\n      });\n    },\n    theme() {\n      this.$router.push('/themes');\n    }\n  }\n};","map":{"version":3,"names":["BButton","BForm","name","components","data","thèmes","fields","selected","list","value","text","mounted","fetchThemes","methods","fetch","then","response","json","themes","catch","error","console","theme","$router","push"],"sources":["src/views/Etudiant.vue"],"sourcesContent":["<template>\n    <b-form>\n         <b-container>\n             <b-navbar toggleable=\"lg\" variant=\"secondary\">\n                 <b-navbar-brand class=\"mb-2\" href=\"/planning\"> Planning</b-navbar-brand>\n                 <b-navbar-brand class=\"mb-2\" href=\"/informations\"> Informations </b-navbar-brand>\n \n \n                 <b-navbar-nav type=\"dark\" class=\"ml-auto\">\n                     <b-nav-form class=\"d-flex align-items-center\" text=\"Lang\">\n                         <b-form-select v-model=\"selected\" :options=\"list\" value-field=\"value\" text-field=\"text\"\n                             class=\"mr-sm-2\" style=\"border-color: black\"></b-form-select>\n                     </b-nav-form>\n                     <b-nav-form class=\"d-flex align-items-center\" text=\"Lang\">\n                         <b-button size=\"sm\" class=\"my-2 my-sm-0\" type=\"submit\" variant=\"dark\">Rechercher</b-button>\n                     </b-nav-form>\n                 </b-navbar-nav>\n             </b-navbar>\n             <br><br>\n \n             <div>\n                 <b-form-group label=\"Liste des Thèmes:\" style=\"font-weight: bold\" label-cols-lg=\"13\"\n                     label-size=\"lg\">\n                 </b-form-group>\n             </div> <br><br><br>\n             <div>\n                 <b-table :items=\"thèmes\" :fields=\"fields\">\n                     <template #cell(actions)>\n                         \n                     </template>\n                 </b-table>\n             </div>\n         </b-container>\n     </b-form>\n </template>\n \n <script>\n import { BButton, BForm } from 'bootstrap-vue';\n export default {\n     name:'EtudiantComponent',\n          components: {\n         BButton, BForm\n     },\n \n     data() {\n         return {\n             thèmes: [],\n             fields: [\"Theme\", \"Enseignant\",\"Specialite\"], // Modifiez \"Théme\" en \"Theme\"\n             selected: null,\n             list: [\n                 { value: \"enseignant\", text: \"Par Enseignant\" },\n                 { value: \"thème\", text: \"Par Thème\" },\n                 { value: \"spécialité\", text: \"Par Spécialité\" },\n             ],\n         }\n     },\n     mounted() {\n         this.fetchThemes(); // Appeler la fonction pour récupérer les thèmes lors du montage du composant\n     },\n     methods: {\n         fetchThemes() {\n             fetch('http://127.0.0.1:8000/etudiant/liste_themes/')\n                 .then(response => response.json())\n                 .then(data => {\n                     this.thèmes = data.themes;\n                 })\n                 .catch(error => {\n                     console.error('Une erreur s\\'est produite lors de la récupération des thèmes:', error);\n                 });\n         },\n         theme() {\n             this.$router.push('/themes');\n         },\n     }\n }\n </script>\n \n <style>\n \n </style>\n "],"mappings":";AAqCA,SAAAA,OAAA,EAAAC,KAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAH,OAAA;IAAAC;EACA;EAEAG,KAAA;IACA;MACAC,MAAA;MACAC,MAAA;MAAA;MACAC,QAAA;MACAC,IAAA,GACA;QAAAC,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAD,YAAA;MACAE,KAAA,iDACAC,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAX,IAAA;QACA,KAAAC,MAAA,GAAAD,IAAA,CAAAc,MAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,mEAAAA,KAAA;MACA;IACA;IACAE,MAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}